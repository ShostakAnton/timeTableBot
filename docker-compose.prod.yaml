version: "3"

services:
  nginx:
    image: nginx:latest
    container_name: nginx-timeTableBot
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./timeTableBot/:/var/www/timeTableBot
      - ./config/nginx:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
    environment:
      - NGINX_HOST=$NGINX_HOST
      - NGINX_PORT=$NGINX_PORT
    links:
      - server

  server:
    build: ./timeTableBot/
    container_name: server-timeTableBot
    working_dir: /var/www/timeTableBot
    
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
    volumes:
      - ./timeTableBot/:/var/www/timeTableBot/
    command: gunicorn server.wsgi -c gunicorn.conf
    environment:
      - PGHOST=$DATABASE_HOST
    env_file:
      - .env
    depends_on:
      - database

  bot:
    build: ./timeTableBot/
    container_name: dtb_bot
    working_dir: /var/www/timeTableBot
    command: python run_pooling.py
    volumes:
      - ./timeTableBot/:/var/www/timeTableBot/
    env_file:
      - .env
    depends_on:
      - server

  database:
    container_name: database-timeTableBot
    image: postgres:latest
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "$DATABASE_PORT:$DATABASE_PORT"
    volumes:
      - ./initial.sql:/docker-entrypoint-initdb.d/initial.sql
  

  redis:
    image: redis:latest
    container_name: redis-timeTableBot
    ports:
      - "$REDIS_PORT:$REDIS_PORT"

  celery:
    build:
      context: ./timeTableBot/
      dockerfile: Dockerfile
    container_name: celery-timeTableBot
    working_dir: /var/www/timeTableBot
    volumes:
      - ./timeTableBot/:/var/www/timeTableBot
    command: /bin/bash -c "celery -A server worker --pool=prefork --concurrency=2 -B --loglevel=info --without-gossip --without-mingle -E"
    depends_on:
      - database
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - PGHOST=$DATABASE_HOST